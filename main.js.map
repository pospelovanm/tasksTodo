{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/articlesList/articles-list.component.css","webpack:///./src/app/articlesList/articles-list.component.html","webpack:///./src/app/articlesList/articles-list.component.ts","webpack:///./src/app/newArticle/new-article.component.html","webpack:///./src/app/newArticle/new-article.component.ts","webpack:///./src/app/shared/navbar.component.css","webpack:///./src/app/shared/navbar.component.html","webpack:///./src/app/shared/navbar.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"\\n<navbar></navbar>\\n<div class=\\\"container\\\">\\n\\n  <div>\\n    <router-outlet></router-outlet>\\n  </div>\\n\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {RouterModule} from \"@angular/router\";\nimport { routing } from \"./app.routes\";\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './shared/navbar.component';\nimport { NewArticleComponent } from \"./newArticle/new-article.component\";\nimport { ArticlesListComponent } from \"./articlesList/articles-list.component\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    NewArticleComponent,\n    ArticlesListComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule,\n    routing,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from '@angular/router';\nimport { NewArticleComponent } from \"./newArticle/new-article.component\";\nimport { ArticlesListComponent } from \"./articlesList/articles-list.component\";\n\n\nconst routes: Routes = [\n  { path: 'new', component: NewArticleComponent },\n  { path: '**', component: ArticlesListComponent }\n\n];\n\nexport const routing = RouterModule.forRoot(routes);\n\n","module.exports = \".manage-panel {\\n    margin-top: 50px;\\n}\\n\"","module.exports = \"\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-10\\\">col-10</div>\\n\\n    <div class=\\\"col-lg-2\\\">\\n      <div class=\\\"manage-panel\\\">\\n        <a [routerLink]=\\\"['new']\\\">Add new article</a>\\n      </div>\\n\\n    </div>\\n  </div>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: \"./articles-list.component.html\",\n  styleUrls: ['./articles-list.component.css']\n\n})\nexport class ArticlesListComponent {}\n","module.exports = \"<h1>New Article</h1>\\n\\n<form [formGroup]=\\\"articleForm\\\" (ngSubmit)=\\\"onSubmit(articleForm.value)\\\" class=\\\"form-horizontal\\\" method=\\\"POST\\\" enctype=\\\"multipart/form-data\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4\\\">\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"categoryName\\\">Category:</label>\\n          <select formControlName=\\\"categoryName\\\" class=\\\"form-control\\\" id=\\\"categoryName\\\">\\n            <option value=\\\"\\\">select category of the article</option>\\n          </select>\\n        </div>\\n\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-8\\\">\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"articleName\\\">Name of the article:</label>\\n          <input formControlName=\\\"articleName\\\" class=\\\"form-control\\\" id=\\\"articleName\\\">\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"content\\\">An article</label>\\n          <textarea formControlName=\\\"content\\\" class=\\\"form-control\\\" id=\\\"content\\\" rows=\\\"3\\\"></textarea>\\n        </div>\\n\\n\\n        <div class=\\\"row\\\" >\\n           <label class=\\\"btn btn-primary chooseImage\\\" for=\\\"my-file-selector\\\">\\n              <input id=\\\"my-file-selector\\\"  type=\\\"file\\\" multiple (change)=\\\"upload($event)\\\" style=\\\"display:none;\\\"  accept=\\\"image/*\\\">\\n              Choose Image\\n           </label>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n           <div *ngFor=\\\"let imageRead of imagesReads\\\" class=\\\"picPreview\\\">\\n              <img id=\\\"image\\\" [src]=\\\"imageRead\\\" width=\\\"100\\\" height=\\\"100\\\" />\\n              <span class=\\\"glyphicon glyphicon-remove\\\" (click)=\\\"deleteImage(imageFile)\\\"></span>\\n           </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">Add article</button>\\n        </div>\\n\\n    </div>\\n  </div>\\n</form>\\n\\n\\n<!--[disabled]=\\\"!f.vald\\\"-->\\n\"","import { Component } from '@angular/core';\nimport {  FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  templateUrl: \"./new-article.component.html\"\n\n})\nexport class NewArticleComponent {\n  articleForm: FormGroup;\n  imagesFiles : Array<File> = [];\n  imagesReads: Array<File> = [];\n\n\n\n  constructor(private fb: FormBuilder) {\n    this.articleForm = this.fb.group({\n      categoryName: [],\n      articleName: [],\n      mainPicture: [],\n      content: [],\n      images: []\n\n    });\n  }\n\n  upload(event) {\n    for (var i = 0; i < event.target.files.length; i++) {\n      let newFile = event.target.files;\n      this.imagesFiles.push(newFile);\n    }\n\n    for (var i = 0; i < event.target.files.length; i++) {\n      let imageFile = this.imagesFiles[i];\n\n        var reader = new FileReader();\n\n        reader.onload = (event: any) => {\n          imageFile = event.target.result;\n          this.imagesReads.push(imageFile);\n          console.log(this.imagesReads);\n        };\n\n        reader.readAsDataURL(event.target.files[i]);\n\n\n      }\n\n    //}\n\n\n  }\n\n\n}\n","module.exports = \"nav.shift ul li a {\\n  position:relative;\\n  z-index: 1;\\n}\\nnav.shift ul li a:hover {\\n  color: #91640F;\\n}\\nnav.shift ul li a:after {\\n  display: block;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  bottom: 0;\\n  right: 0;\\n  margin: auto;\\n  width: 100%;\\n  height: 1px;\\n  content: '.';\\n  color: transparent;\\n  background: #F1C40F;\\n  opacity: 0;\\n  z-index: -1;\\n}\\nnav.shift ul li a:hover:after {\\n  opacity: 1;\\n  visibility: visible;\\n  height: 100%;\\n}\\n\\n\"","module.exports = \"<nav class=\\\"navbar navbar-dark bg-dark navbar-expand-lg shift\\\">\\n  <div class=\\\"navbar-collapse collapse justify-content-center\\\">\\n    <ul class=\\\"navbar-nav\\\">\\n      <li class=\\\"nav-item active\\\"><a class=\\\"nav-link\\\" href=\\\"#\\\">ГЛАВНАЯ</a></li>\\n      <li  class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" href=\\\"#\\\">ЗДОРОВЬЕ</a></li>\\n      <li  class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" href=\\\"#\\\">ХОББИ</a></li>\\n      <li  class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" href=\\\"#\\\">ВСЯКОЕ</a></li>\\n    </ul>\\n  </div>\\n    <ul class=\\\"navbar-nav ml-auto\\\">\\n      <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" href=\\\"#\\\"><span class=\\\"glyphicon glyphicon-user\\\"></span> Sign Up</a></li>\\n      <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" href=\\\"#\\\"><span class=\\\"glyphicon glyphicon-log-in\\\"></span> Login</a></li>\\n    </ul>\\n </nav>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: \"navbar\",\n  templateUrl: \"./navbar.component.html\",\n  styleUrls: ['./navbar.component.css']\n\n})\nexport class NavbarComponent {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}